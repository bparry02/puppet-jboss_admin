# == Defines jboss_admin::<%= type[:name] %>
#
# <%= type[:description] %>
#
# === Parameters
#
<% type[:attributes].each_key.sort.each do |attr| -%>
# [*<%= puppet_name attr %>*]
<%= type[:attributes][attr][:description].empty? ? '#' : type[:attributes][attr][:description].gsub(/^/, '#   ').gsub(/\t/, '    ') %>
#
<% end -%>
#
define jboss_admin::resource::<%= type[:name] %> (
  $server,
<% type[:attributes].each_key.sort.each do |attr| -%>
  $<%= (puppet_name attr).to_s.ljust 30 %> = undef,
<% end -%>
  $ensure                         = present,
  $cli_path                       = $name
) {
  if $ensure == present {

<% type[:attributes].each_key.sort.each do |attr| -%>
<% attribute = type[:attributes][attr] -%>
<% if attribute[:required] -%>
    if $<%= puppet_name attr %> == undef or $<%= puppet_name attr %> == undefined { fail('The attribute <%= puppet_name attr %> is undefined but required') }
<% end -%>
<% if !attribute[:type].nil?
     if ['INT', 'LONG'].include? attribute[:type][:'TYPE_MODEL_VALUE'] -%>
    if $<%= puppet_name attr %> != undef and $<%= puppet_name attr %> != undefined and !is_integer($<%= puppet_name attr %>) {
      fail('The attribute <%= puppet_name attr %> is not an integer')
    }
<%   end -%>
<%   if attribute[:type][:'TYPE_MODEL_VALUE'] == 'STRING' -%>
<%     if attribute[:allowed] 
         allowed_values = attribute[:allowed].collect{|a| "'#{a}'"}.join(',') -%>
    if $<%= puppet_name attr %> != undef and $<%= puppet_name attr %> != undefined and !($<%= puppet_name attr %> in [<%= allowed_values %>]) {
      fail('The attribute <%= puppet_name attr %> is not an allowed value: <%= allowed_values.gsub(/'/, '"') %>')
    }
<%     end
     end -%>
<%   if attribute[:type][:'TYPE_MODEL_VALUE'] == 'BOOLEAN' -%>
    if $<%= puppet_name attr %> != undef and $<%= puppet_name attr %> != undefined {
      validate_bool($<%= puppet_name attr %>)
    }
<%   end -%>
<%   if attribute[:type][:'TYPE_MODEL_VALUE'] == 'LIST' -%>
    if $<%= puppet_name attr %> != undef and $<%= puppet_name attr %> != undefined and !is_array($<%= puppet_name attr %>) {
      fail('The attribute <%= puppet_name attr %> is not an array')
    }
<%   end -%>
<% end
end -%>

    $raw_options = {
<% type[:attributes].each_key.sort.each do |attr_name| 
  unless attr_name.to_s == 'enabled' && ['data-source', 'xa-data-source'].include?(type[:name].to_s)-%>
      <%= "'#{attr_name}'".ljust 30 %> => $<%= puppet_name attr_name %>,
<% end
end -%>
    }
    $options = delete_undef_values($raw_options)

    jboss_resource { $cli_path:
      ensure  => $ensure,
      server  => $server,
      options => $options
    }

<% if ['data-source', 'xa-data-source'].include?(type[:name].to_s)-%>
    if $enabled {
      jboss_exec {"Enable Data Source ${name}":
        command => "${name}:enable",
        unless  => "(result == true) of ${name}:read-attribute(name=enabled)",
        server  => $server
      }
    }
    else {
      jboss_exec {"Disable Data Source ${name}":
        command => "${name}:disable",
        onlyif  => "(result == true) of ${name}:read-attribute(name=enabled)",
        server  => $server
      }
    }
<% end -%>

  }

  if $ensure == absent {
    jboss_resource { $cli_path:
      ensure => $ensure,
      server => $server
    }
  }


}
